class Bird
{
    field int birdX, birdY;
    field int xSize, ySize;
    field int birdSpeedX, birdSpeedY;
    field boolean isAlive;
    constructor Bird new(int X, int Y, int BirdSpeedX, int BirdSpeedY)
    {
        let birdX = X;
        let birdY = Y;
        let birdSpeedX = BirdSpeedX;
        let birdSpeedY = BirdSpeedY;
        let isAlive = true;
        return this;
    }

    method void die()
    {
        let isAlive = false;
        return;
    }

    method boolean onScreen()
    {
        return ((1 < birdX) & (birdX + xSize < 508)) & 
                ((1 < birdY) & (birdY + ySize) < 255);
    }

    method int getX(){ return birdX;}
    method int getY(){ return birdY;}
    method void setX(int X){ let birdX = X; return;}
    method void setY(int Y){ let birdY = Y; return;}

    method int getAlive(){ return isAlive;}
    method void setAlive(boolean flag){ let isAlive = flag; return;}

    method void draw()
    {
        if (~isAlive)
        {
            return;
        }

        do Screen.setColor(true);
        do Screen.drawCircle(birdX, birdY, 6);
        return;
    }

    method void move()
    {
        let birdX = birdX + birdSpeedX;
        let birdY = birdY + birdSpeedY;
        return;
    }

    method void dispose()
    {
        do Memory.deAlloc(this);
        return;
    }
}
