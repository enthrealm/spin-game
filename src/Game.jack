class Game
{
    field boolean isRunning;

    field Bird bird; 

    field Interface interface;
    field GameInterface gameInterface;

    field Player player;
    field int score, health, position;
    field boolean canTakeDamage;
    field int height;
    field boolean win;

    constructor Game new()
    {
        var int birdX, birdY, birdSpeedX, birdSpeedY;
        let birdX = 450; let birdY = 175; let birdSpeedX = -2; let birdSpeedY = -1;

        let interface = Interface.new();

        let win = false;

        let health = 3;
        let canTakeDamage = true;
        let player = Player.new(250, 50, 6, 16, 10);
        let position = 0;

        let bird = Bird.new(birdX, birdY, birdSpeedX, birdSpeedY);

        let score = 0;

        return this;
    }

    method void run()
    {
        var char key;

        let gameInterface = GameInterface.new();
        do handleStartGame();
        do handleStartCutscene();

        do handleGameProcess();

        do Screen.clearScreen();
        do interface.drawFinalWindow(score, height, win);
        do handleEndGame();

        return;
    }

    method void handleGameProcess()
    {
        var char key;
        var int tick, frame;
        var int rotation;
        var int respawnTimer;
        let tick = 0; let frame = 0;
        let rotation = 0;
        let respawnTimer = 0;

        let isRunning = true;

        while (isRunning)
        {
            let key = Keyboard.keyPressed();

            if (tick = 2500)
            {
                if (key = 140) { let isRunning = false; }  // esc key

                if (key = 130) 
                { 
                    if (position = 0) { let rotation = 1; }
                    let position = position + 1;
                    if (position > 3) 
                    { 
                        let position = 0; 
                        if (rotation = 1) { let score = score + 100;}
                        let rotation = 0; 
                    }
                }  // left arrow

                if (key = 132) 
                { 
                    if (position = 0) { let rotation = 2; }
                    let position = position - 1;
                    if (position = 0)
                    {
                        if (rotation = 2) { let score = score + 100;}
                        let rotation = 0; 
                    }
                    if (position < 0) 
                    { 
                        let position = 3;
                    }
                }  

                do drawFrame();
                if (height = 1040) 
                {
                    let isRunning = false;
                    if (position = 0) { let win = true; }
                    if (position = 1) { let win = true; }
                }
                let tick = 0;
                let height = height + 10;
                let frame = frame + 1;
            }

            if (bird.getAlive() & (Utils.mod(tick, 190) = 0))
            {
                do bird.move();

                if (canTakeDamage & (Utils.abs(250 - bird.getX()) < 10)) // Collision
                {
                    let health = health - 1;
                    do bird.setAlive(false);
                    let respawnTimer = 100; 
                    if (health = 0)
                    {
                        let isRunning = false;
                    }
                }
            }

            if (~bird.getAlive())
            {
                let respawnTimer = respawnTimer - 1;
                if (respawnTimer = 0 & (Utils.mod(tick, 37) > 18))
                {
                    do bird.setAlive(true);
                    do bird.setX(450);
                    do bird.setY(175);
                    do bird.setSpeedX(-2);
                }
                if (respawnTimer = 0 & (Utils.mod(tick, 37) < 18))
                {
                    do bird.setAlive(true);
                    do bird.setX(50);
                    do bird.setY(175);
                    do bird.setSpeedX(2);
                }

            }

            let tick = tick + 1;
        }
        return;
    }
    method void drawFrame()
    {
        do Screen.clearScreen();
        do gameInterface.DrawInterface(health, score, height);
        do player.mainDraw(position);
        
        do bird.draw(); 

        if (height > 1000)
        {
            do Screen.setColor(1);
            do Screen.drawRectangle(128, 255 - (((height - 1000) / 10) * 43), 386, 255);
        }

        return;
    }
    
    method void dispose()
    {
        do Memory.deAlloc(bird);
        do random.dispose();
        do interface.dispose();
        do Memory.deAlloc(this);

        return;
    }
    method void handleStartGame()
    {
        var char key;

        let key = Keyboard.keyPressed();
        do interface.drawWelcomeWindow();
        while (~(key = 128)) 
        {
            let key = Keyboard.keyPressed();
        }
        return;
    }

    method void handleStartCutscene()
    {
        var int frame;
        let frame = 0;
        while (frame < 170)
        {
            do Screen.clearScreen();
            do player.mainDraw(position);
            do gameInterface.DrawSky();
            do Screen.setColor(1);
            do Screen.drawLine(216 + frame, 83, 386, 83);
            do Sys.wait(250);
            let frame = frame + 34;
        }
        return;
    } 

    method void handleEndGame()
    {
        while (~(Keyboard.keyPressed() = 128)) { } // enter key
        return;
    }
}
