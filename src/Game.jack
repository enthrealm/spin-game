class Game
{
    field boolean isRunning;

    field int birdStartX, birdStartY;
    field int birdSpeedX, birdSpeedY; 
    field int birdTiming; 
    field int birdSpawnTimer; 

    field Bird bird; 
    field Random random;     

    field Interface interface;

    field Player player;
    field GameInterface gameInterface;
    field int score, health, position;
    field int height;
    field boolean win;

    constructor Game new()
    {
        // initialize interface
        let interface = Interface.new();

        let win = false;

        // initialize player
        let health = 3;
        let player = Player.new(250, 50, 6, 16, 10);
        let position = 0;

        //init bird fields
        let birdSpeedX = 2; 
        let birdSpeedY = 1;
        let birdTiming = 100;
        let birdSpawnTimer = 0;
        let bird = Bird.new(0, 0);
        do bird.die();

        // initialize player score
        let score = 0;

        return this;
    }

    method void run()
    {
        var char key;

        let gameInterface = GameInterface.new();
        do handleStartGame();
        do handleStartCutscene();

        do handleGameProcess();

        do Screen.clearScreen();
        do interface.drawFinalWindow(score, height, win);
        do handleEndGame();

        return;
    }


    method void handleGameProcess()
    {
        var char key;
        var int tick, birdTick, frame;
        var int rotation;
        let rotation = 0;
        let isRunning = true;
        let tick = 0;
        let birdTick = 0;
        let frame = 0;

        while (isRunning)
        {
            let key = Keyboard.keyPressed();

            if (tick = 2500)
            {
                if (key = 140) { let isRunning = false; }  // esc key

                if (key = 130) 
                { 
                    if (position = 0) { let rotation = 1; }
                    let position = position + 1;
                    if (position > 3) 
                    { 
                        let position = 0; 
                        if (rotation = 1) { let score = score + 100;}
                        let rotation = 0; 
                    }
                }  // left arrow

                if (key = 132) 
                { 
                    if (position = 0) { let rotation = 2; }
                    let position = position - 1;
                    if (position = 0)
                    {
                        if (rotation = 2) { let score = score + 100;}
                        let rotation = 0; 
                    }
                    if (position < 0) 
                    { 
                        let position = 3;
                    }
                }  

                if (bird.GetAlive())
                {
                    do bird.move(birdSpeedX, 0);

                    if ((birdSpeedX > 0 & bird.GetX() > 510) | 
                            (birdSpeedX < 0 & bird.GetX() < -16))
                    {
                        do bird.die();
                    }
                }


                let birdSpawnTimer = birdSpawnTimer + 1;
                if (birdSpawnTimer > 100)  
                {
                    do trySpawnBird();
                    let birdSpawnTimer = 0;
                }

                do drawFrame();
                if (height = 1040) 
                {
                    let isRunning = false;
                    if (position = 0) { let win = true; }
                    if (position = 1) { let win = true; }
                }
                let tick = 0;
                let height = height + 10;
                let frame = frame + 1;
            }
            
            // Add this block to draw bird every 500 ticks
            if (birdTick > 500)
            {
                if (bird.GetAlive())
                {
                    do bird.draw();
                }
                let birdTick = 0;
            }

            let tick = tick + 1;
            let birdTick = birdTick + 1;

        }
        return;
    }


    method void trySpawnBird()
    {
        if (~bird.GetAlive())
        {
            let birdStartX = 0;
            let birdSpeedX = 2; 

            let birdStartY = 50; 

            do bird.setAlive(true);
            do bird.SetX(birdStartX);
            do bird.SetY(birdStartY);
        }
        return;
    }

    method void drawFrame()
    {
        do Screen.clearScreen();
        do gameInterface.DrawInterface(health, score, height);
        do player.mainDraw(position);
        if (height > 1000)
        {
            do Screen.setColor(1);
            do Screen.drawRectangle(128, 255 - (((height - 1000) / 10) * 43), 386, 255);
        }

        // Draw bird if alive
        if (bird.GetAlive())
        {
            do bird.draw();
        }

        return;
    }
    
    method boolean checkBirdCollision()
    {
        return false;
        //TODO
    }

    method void dispose()
    {
        do Memory.deAlloc(bird);
        do random.dispose();
        do interface.dispose();
        do Memory.deAlloc(this);

        return;
    }
    method void handleStartGame()
    {
        var char key;

        let key = Keyboard.keyPressed();
        do interface.drawWelcomeWindow();
        while (~(key = 128)) // enter key
        {
            let key = Keyboard.keyPressed();

        }
        return;
    }

    method void handleStartCutscene()
    {
        var int frame;
        let frame = 0;
        while (frame < 170)
        {
            do Screen.clearScreen();
            do player.mainDraw(position);
            do gameInterface.DrawSky();
            do Screen.setColor(1);
            do Screen.drawLine(216 + frame, 83, 386, 83);
            do Sys.wait(250);
            let frame = frame + 34;
        }
        return;
    } 

    method void handleEndGame()
    {
        while (~(Keyboard.keyPressed() = 128)) { } // enter key
        return;
    }
}
